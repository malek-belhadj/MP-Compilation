
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSCOMMA DIVIDE DO ELSE ENDFOR ENDIF ENDWHILE EQ EQUALS FOR GE GT ID IF LE LPAREN LT MINUS NE NUMBER PLUS PRINT RPAREN STRING THEN TIMES TO WHILEprogram : statement\n| program statementstatement : assignment\n| if_statement\n| for_statement\n| while_statement\n| print_statementassignment : ID EQUALS expressionif_statement : IF condition THEN program ENDIF\n| IF condition THEN program ELSE program ENDIFfor_statement : FOR ID EQUALS expression TO expression DO program ENDFORwhile_statement : WHILE condition DO program ENDWHILEprint_statement : PRINT LPAREN expression RPARENcondition : expression GT expression\n| expression LT expression\n| expression GE expression\n| expression LE expression\n| expression EQ expression\n| expression NE expressionexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : STRINGexpression : IDexpression : MINUS expression %prec UMINUS'
    
_lr_action_items = {'ID':([0,1,2,3,4,5,6,7,9,10,11,13,14,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,42,49,50,51,52,53,55,56,57,58,59,60,61,63,64,65,66,],[8,8,-1,-3,-4,-5,-6,-7,21,22,21,-2,21,21,21,-25,-26,-27,21,-8,8,21,21,21,21,21,21,21,21,21,21,-28,21,8,8,-20,-21,-22,-23,-24,8,-13,-9,8,21,-12,8,-10,8,8,-11,]),'IF':([0,1,2,3,4,5,6,7,13,19,20,21,25,26,37,40,42,49,50,51,52,53,55,56,57,58,60,61,63,64,65,66,],[9,9,-1,-3,-4,-5,-6,-7,-2,-25,-26,-27,-8,9,-28,9,9,-20,-21,-22,-23,-24,9,-13,-9,9,-12,9,-10,9,9,-11,]),'FOR':([0,1,2,3,4,5,6,7,13,19,20,21,25,26,37,40,42,49,50,51,52,53,55,56,57,58,60,61,63,64,65,66,],[10,10,-1,-3,-4,-5,-6,-7,-2,-25,-26,-27,-8,10,-28,10,10,-20,-21,-22,-23,-24,10,-13,-9,10,-12,10,-10,10,10,-11,]),'WHILE':([0,1,2,3,4,5,6,7,13,19,20,21,25,26,37,40,42,49,50,51,52,53,55,56,57,58,60,61,63,64,65,66,],[11,11,-1,-3,-4,-5,-6,-7,-2,-25,-26,-27,-8,11,-28,11,11,-20,-21,-22,-23,-24,11,-13,-9,11,-12,11,-10,11,11,-11,]),'PRINT':([0,1,2,3,4,5,6,7,13,19,20,21,25,26,37,40,42,49,50,51,52,53,55,56,57,58,60,61,63,64,65,66,],[12,12,-1,-3,-4,-5,-6,-7,-2,-25,-26,-27,-8,12,-28,12,12,-20,-21,-22,-23,-24,12,-13,-9,12,-12,12,-10,12,12,-11,]),'$end':([1,2,3,4,5,6,7,13,19,20,21,25,37,49,50,51,52,53,56,57,60,63,66,],[0,-1,-3,-4,-5,-6,-7,-2,-25,-26,-27,-8,-28,-20,-21,-22,-23,-24,-13,-9,-12,-10,-11,]),'ENDIF':([2,3,4,5,6,7,13,19,20,21,25,37,42,49,50,51,52,53,56,57,60,61,63,66,],[-1,-3,-4,-5,-6,-7,-2,-25,-26,-27,-8,-28,57,-20,-21,-22,-23,-24,-13,-9,-12,63,-10,-11,]),'ELSE':([2,3,4,5,6,7,13,19,20,21,25,37,42,49,50,51,52,53,56,57,60,63,66,],[-1,-3,-4,-5,-6,-7,-2,-25,-26,-27,-8,-28,58,-20,-21,-22,-23,-24,-13,-9,-12,-10,-11,]),'ENDWHILE':([2,3,4,5,6,7,13,19,20,21,25,37,49,50,51,52,53,55,56,57,60,63,66,],[-1,-3,-4,-5,-6,-7,-2,-25,-26,-27,-8,-28,-20,-21,-22,-23,-24,60,-13,-9,-12,-10,-11,]),'ENDFOR':([2,3,4,5,6,7,13,19,20,21,25,37,49,50,51,52,53,56,57,60,63,65,66,],[-1,-3,-4,-5,-6,-7,-2,-25,-26,-27,-8,-28,-20,-21,-22,-23,-24,-13,-9,-12,-10,66,-11,]),'EQUALS':([8,22,],[14,39,]),'LPAREN':([9,11,12,14,17,18,24,27,28,29,30,31,32,33,34,35,36,39,59,],[18,18,24,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'NUMBER':([9,11,14,17,18,24,27,28,29,30,31,32,33,34,35,36,39,59,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'STRING':([9,11,14,17,18,24,27,28,29,30,31,32,33,34,35,36,39,59,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'MINUS':([9,11,14,16,17,18,19,20,21,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,41,43,44,45,46,47,48,49,50,51,52,53,54,59,62,],[17,17,17,34,17,17,-25,-26,-27,17,34,17,17,17,17,17,17,17,17,17,17,-28,34,17,34,34,34,34,34,34,34,-20,-21,-22,-23,-24,34,17,34,]),'THEN':([15,19,20,21,37,43,44,45,46,47,48,49,50,51,52,53,],[26,-25,-26,-27,-28,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,]),'GT':([16,19,20,21,37,49,50,51,52,53,],[27,-25,-26,-27,-28,-20,-21,-22,-23,-24,]),'LT':([16,19,20,21,37,49,50,51,52,53,],[28,-25,-26,-27,-28,-20,-21,-22,-23,-24,]),'GE':([16,19,20,21,37,49,50,51,52,53,],[29,-25,-26,-27,-28,-20,-21,-22,-23,-24,]),'LE':([16,19,20,21,37,49,50,51,52,53,],[30,-25,-26,-27,-28,-20,-21,-22,-23,-24,]),'EQ':([16,19,20,21,37,49,50,51,52,53,],[31,-25,-26,-27,-28,-20,-21,-22,-23,-24,]),'NE':([16,19,20,21,37,49,50,51,52,53,],[32,-25,-26,-27,-28,-20,-21,-22,-23,-24,]),'PLUS':([16,19,20,21,25,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,62,],[33,-25,-26,-27,33,-28,33,33,33,33,33,33,33,33,-20,-21,-22,-23,-24,33,33,]),'TIMES':([16,19,20,21,25,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,62,],[35,-25,-26,-27,35,-28,35,35,35,35,35,35,35,35,35,35,-22,-23,-24,35,35,]),'DIVIDE':([16,19,20,21,25,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,62,],[36,-25,-26,-27,36,-28,36,36,36,36,36,36,36,36,36,36,-22,-23,-24,36,36,]),'RPAREN':([19,20,21,37,38,41,49,50,51,52,53,],[-25,-26,-27,-28,53,56,-20,-21,-22,-23,-24,]),'DO':([19,20,21,23,37,43,44,45,46,47,48,49,50,51,52,53,62,],[-25,-26,-27,40,-28,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,64,]),'TO':([19,20,21,37,49,50,51,52,53,54,],[-25,-26,-27,-28,-20,-21,-22,-23,-24,59,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,26,40,58,64,],[1,42,55,61,65,]),'statement':([0,1,26,40,42,55,58,61,64,65,],[2,13,2,2,13,13,2,13,2,13,]),'assignment':([0,1,26,40,42,55,58,61,64,65,],[3,3,3,3,3,3,3,3,3,3,]),'if_statement':([0,1,26,40,42,55,58,61,64,65,],[4,4,4,4,4,4,4,4,4,4,]),'for_statement':([0,1,26,40,42,55,58,61,64,65,],[5,5,5,5,5,5,5,5,5,5,]),'while_statement':([0,1,26,40,42,55,58,61,64,65,],[6,6,6,6,6,6,6,6,6,6,]),'print_statement':([0,1,26,40,42,55,58,61,64,65,],[7,7,7,7,7,7,7,7,7,7,]),'condition':([9,11,],[15,23,]),'expression':([9,11,14,17,18,24,27,28,29,30,31,32,33,34,35,36,39,59,],[16,16,25,37,38,41,43,44,45,46,47,48,49,50,51,52,54,62,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','calc_parser.py',8),
  ('program -> program statement','program',2,'p_program','calc_parser.py',9),
  ('statement -> assignment','statement',1,'p_statement','calc_parser.py',18),
  ('statement -> if_statement','statement',1,'p_statement','calc_parser.py',19),
  ('statement -> for_statement','statement',1,'p_statement','calc_parser.py',20),
  ('statement -> while_statement','statement',1,'p_statement','calc_parser.py',21),
  ('statement -> print_statement','statement',1,'p_statement','calc_parser.py',22),
  ('assignment -> ID EQUALS expression','assignment',3,'p_assignment','calc_parser.py',26),
  ('if_statement -> IF condition THEN program ENDIF','if_statement',5,'p_if_statement','calc_parser.py',30),
  ('if_statement -> IF condition THEN program ELSE program ENDIF','if_statement',7,'p_if_statement','calc_parser.py',31),
  ('for_statement -> FOR ID EQUALS expression TO expression DO program ENDFOR','for_statement',9,'p_for_statement','calc_parser.py',38),
  ('while_statement -> WHILE condition DO program ENDWHILE','while_statement',5,'p_while_statement','calc_parser.py',42),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print_statement','calc_parser.py',46),
  ('condition -> expression GT expression','condition',3,'p_condition','calc_parser.py',50),
  ('condition -> expression LT expression','condition',3,'p_condition','calc_parser.py',51),
  ('condition -> expression GE expression','condition',3,'p_condition','calc_parser.py',52),
  ('condition -> expression LE expression','condition',3,'p_condition','calc_parser.py',53),
  ('condition -> expression EQ expression','condition',3,'p_condition','calc_parser.py',54),
  ('condition -> expression NE expression','condition',3,'p_condition','calc_parser.py',55),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calc_parser.py',59),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calc_parser.py',60),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calc_parser.py',61),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc_parser.py',62),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc_parser.py',66),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc_parser.py',70),
  ('expression -> STRING','expression',1,'p_expression_string','calc_parser.py',74),
  ('expression -> ID','expression',1,'p_expression_name','calc_parser.py',78),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc_parser.py',82),
]
